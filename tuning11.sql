-- 인덱스 스캔 범위 계산

-- 인덱스 범위스캔이 나오면 인덱스를 잘 탄다고 오해 아닌 오해를 하게 될 때가 있습니다.
-- 정말 일반적인 경우에는 크게 문제가 되지 않으나 너무 많은 범위를 스캔하고, 일부만 결과 집합이 된다면 인덱스 범위 스캔이 잘못됐을지를 체크해 봐야 한다.


-- 조건절에 따른 인덱스 스캔 범위 파악

-- 어떤 SQL문에서 조건절의 모든 조건이 = 조건일 경우에는 인덱스 컬럼순서가 그리 중요하지 않습니다.
-- 쿼리문이 = 조건과 범위 조건이 섞인 상태에서 첫번째 범위 조건까지는 원하는 인덱스 스캔을 하지만, 범위 조건 뒤부터는 원하는 않는 구간까지 스캔합니다.

SELECT * FROM 상품 WHERE 상품명 = '불고기버거' AND 상품구분코드 BETWEEN '100100' AND '100101'


인덱스1 - 상품구분코드 + 상품명
인덱스2 - 상품명 + 상품구분코드

-- 1은 코드를 전부 스캔한 후에 불고기버거 필터방식으로 찾게 되고
-- 2은 상품명을 찾은 후 코드를 스캔한다.

-- 실행 계획에서 IDNEX RANGE Scan 이라고 나오는데 결과는 극명하게 차이가 납니다.


-- 1. ORD_X02 사용시

===== 

TABLE ACCESS BY INDEX ROWID
    INDEX RANGE SCAN            2620 buffer
    
    
-- 2. ORD_X03 사용시

====

TABLE ACCESS BY INDEX ROWID
    INDEX RANGE SCAN             16 buffer
    
    
-- 인덱스 설계 기준 및 전략


-- 1. 등치(=) 조건으로 사용되고 자주 사용되는 컬럼을 앞쪽으로 만든다.
-- 2. 등치(=) 조건으로 사용되고 값의 수(Distinct value)가 적은 컬럼을 앞쪽으로 만든다.
-- 3. 자주 사용되는 컬럼을 선정한다.
-- 4. 테이블 랜덤 액세스를 줄인다.
-- 5. 정렬을 대신한다.


